// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String
  name          String?
  role          String    @default("user")
  department    String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  applications  Application[]
  approvals     Approval[]
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Workflow {
  id            String    @id @default(cuid())
  name          String
  description   String?
  rules         String    // JSON string containing approval rules
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  applications  Application[]
}

model Application {
  id            String    @id @default(cuid())
  title         String
  content       String
  status        String    @default("pending") // pending, in_progress, approved, rejected
  userId        String
  workflowId    String
  currentStep   Int       @default(0)
  metadata      String?   // JSON string for additional data
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  user          User      @relation(fields: [userId], references: [id])
  workflow      Workflow  @relation(fields: [workflowId], references: [id])
  approvals     Approval[]
  comments      Comment[]
}

model Approval {
  id            String    @id @default(cuid())
  applicationId String
  approverId    String
  status        String    // pending, approved, rejected
  comment       String?
  step          Int
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  application   Application @relation(fields: [applicationId], references: [id])
  approver      User        @relation(fields: [approverId], references: [id])
}

model Comment {
  id            String    @id @default(cuid())
  applicationId String
  userId        String
  content       String
  createdAt     DateTime  @default(now())

  application   Application @relation(fields: [applicationId], references: [id])
}